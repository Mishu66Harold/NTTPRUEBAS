// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('flujodecompras', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('flujodecompras', async function() {
    // Test name: flujodecompras
    // Step # | name | target | value
    // 1 | open | /index.php?route=common/home | 
    await driver.get("http://opencart.abstracta.us/index.php?route=common/home")
    // 2 | setWindowSize | 1552x832 | 
    await driver.manage().window().setRect({ width: 1552, height: 832 })
    // 3 | runScript | window.scrollTo(0,651.2000122070312) | 
    await driver.executeScript("window.scrollTo(0,651.2000122070312)")
    // 4 | click | css=.product-layout:nth-child(1) .hidden-xs | 
    await driver.findElement(By.css(".product-layout:nth-child(1) .hidden-xs")).click()
    // 5 | mouseOver | css=.product-layout:nth-child(1) .hidden-xs | 
    {
      const element = await driver.findElement(By.css(".product-layout:nth-child(1) .hidden-xs"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 6 | runScript | window.scrollTo(0,857.5999755859375) | 
    await driver.executeScript("window.scrollTo(0,857.5999755859375)")
    // 7 | mouseOut | css=.product-layout:nth-child(1) .hidden-xs | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 8 | click | css=.product-layout:nth-child(2) .hidden-xs | 
    await driver.findElement(By.css(".product-layout:nth-child(2) .hidden-xs")).click()
    // 9 | runScript | window.scrollTo(0,261.6000061035156) | 
    await driver.executeScript("window.scrollTo(0,261.6000061035156)")
    // 10 | click | css=li:nth-child(4) .hidden-xs | 
    await driver.findElement(By.css("li:nth-child(4) .hidden-xs")).click()
    // 11 | click | css=.pull-right > .btn | 
    await driver.findElement(By.css(".pull-right > .btn")).click()
    // 12 | doubleClick | css=.pull-right > .btn | 
    {
      const element = await driver.findElement(By.css(".pull-right > .btn"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 13 | click | css=.radio:nth-child(4) input | 
    await driver.findElement(By.css(".radio:nth-child(4) input")).click()
    // 14 | click | id=button-account | 
    await driver.findElement(By.id("button-account")).click()
    // 15 | mouseOver | linkText=Step 2: Billing Details | 
    {
      const element = await driver.findElement(By.linkText("Step 2: Billing Details"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 16 | click | id=input-payment-firstname | 
    await driver.findElement(By.id("input-payment-firstname")).click()
    // 17 | type | id=input-payment-firstname | mISHELL
    await driver.findElement(By.id("input-payment-firstname")).sendKeys("mISHELL")
    // 18 | type | id=input-payment-lastname | Araujo
    await driver.findElement(By.id("input-payment-lastname")).sendKeys("Araujo")
    // 19 | type | id=input-payment-email | mishellaraujo@gmail.com
    await driver.findElement(By.id("input-payment-email")).sendKeys("mishellaraujo@gmail.com")
    // 20 | type | id=input-payment-telephone | 09999999
    await driver.findElement(By.id("input-payment-telephone")).sendKeys("09999999")
    // 21 | click | id=input-payment-company | 
    await driver.findElement(By.id("input-payment-company")).click()
    // 22 | type | id=input-payment-company | ntt
    await driver.findElement(By.id("input-payment-company")).sendKeys("ntt")
    // 23 | click | id=input-payment-address-1 | 
    await driver.findElement(By.id("input-payment-address-1")).click()
    // 24 | type | id=input-payment-address-1 | amazonas
    await driver.findElement(By.id("input-payment-address-1")).sendKeys("amazonas")
    // 25 | type | id=input-payment-address-2 | japon
    await driver.findElement(By.id("input-payment-address-2")).sendKeys("japon")
    // 26 | click | id=input-payment-city | 
    await driver.findElement(By.id("input-payment-city")).click()
    // 27 | type | id=input-payment-city | Quito
    await driver.findElement(By.id("input-payment-city")).sendKeys("Quito")
    // 28 | click | id=input-payment-postcode | 
    await driver.findElement(By.id("input-payment-postcode")).click()
    // 29 | type | id=input-payment-postcode | 170105
    await driver.findElement(By.id("input-payment-postcode")).sendKeys("170105")
    // 30 | click | id=input-payment-country | 
    await driver.findElement(By.id("input-payment-country")).click()
    // 31 | select | id=input-payment-country | label=Ecuador
    {
      const dropdown = await driver.findElement(By.id("input-payment-country"))
      await dropdown.findElement(By.xpath("//option[. = 'Ecuador']")).click()
    }
    // 32 | click | id=input-payment-zone | 
    await driver.findElement(By.id("input-payment-zone")).click()
    // 33 | select | id=input-payment-zone | label=Pichincha
    {
      const dropdown = await driver.findElement(By.id("input-payment-zone"))
      await dropdown.findElement(By.xpath("//option[. = 'Pichincha']")).click()
    }
    // 34 | click | id=button-guest | 
    await driver.findElement(By.id("button-guest")).click()
    // 35 | runScript | window.scrollTo(0,527.2000122070312) | 
    await driver.executeScript("window.scrollTo(0,527.2000122070312)")
    // 36 | click | id=button-shipping-method | 
    await driver.findElement(By.id("button-shipping-method")).click()
    // 37 | click | id=button-payment-method | 
    await driver.findElement(By.id("button-payment-method")).click()
    // 38 | click | css=p:nth-child(6) > .form-control | 
    await driver.findElement(By.css("p:nth-child(6) > .form-control")).click()
    // 39 | type | css=p:nth-child(6) > .form-control | en espera de respuesta
    await driver.findElement(By.css("p:nth-child(6) > .form-control")).sendKeys("en espera de respuesta")
    // 40 | click | id=button-payment-method | 
    await driver.findElement(By.id("button-payment-method")).click()
    // 41 | click | name=agree | 
    await driver.findElement(By.name("agree")).click()
    // 42 | click | name=agree | 
    await driver.findElement(By.name("agree")).click()
    // 43 | doubleClick | name=agree | 
    {
      const element = await driver.findElement(By.name("agree"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 44 | click | name=agree | 
    await driver.findElement(By.name("agree")).click()
    // 45 | click | id=button-payment-method | 
    await driver.findElement(By.id("button-payment-method")).click()
    // 46 | runScript | window.scrollTo(0,500) | 
    await driver.executeScript("window.scrollTo(0,500)")
    // 47 | click | id=button-confirm | 
    await driver.findElement(By.id("button-confirm")).click()
  })
})
